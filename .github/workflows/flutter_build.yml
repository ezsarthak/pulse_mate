# Jai Ganeshaye namah
# Om namah shivay
name: Flutter Builder

on:
  push:
    branches:
      - main
    paths:
      - 'FlutterApp/**'
  workflow_dispatch:

jobs:
  build:
    name: Build Flutter APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.0"
          channel: stable
          cache: true

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            FlutterApp/build/
          key: flutter-deps-${{ hashFiles('FlutterApp/pubspec.yaml') }}
#          restore-keys: |
#            flutter-deps-
      
#      - name: Restore Keystore File
#        env:
#          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
#        run: echo "$KEYSTORE_BASE64" | base64 --decode > FlutterApp/android/app/keystore.jks
#
#      - name: Set Environment Variables
#        run: |
#          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
#          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
#          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
#
#      - name: Debug Files
#        run: |
#          ls -l FlutterApp/android/app/
#          cat FlutterApp/android/app/keystore.jks | base64 | head -c 100

      - name: Running Build Runner...
        run: flutter pub run build_runner build
        working-directory: FlutterApp

        
      # - name: Decode and Restore Keystore
      #   run: |
      #     echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > FlutterApp/android/app/keystore.jks
      
#      - name: Create key.properties
#        run: |
#          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > FlutterApp/android/key.properties
#          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> FlutterApp/android/key.properties
#          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> FlutterApp/android/key.properties
#          echo "storeFile=keystore.jks" >> FlutterApp/android/key.properties

      - name: Install Dependencies
        run: flutter pub get
        working-directory: FlutterApp
        
      - name: Build APK
        run: flutter build apk --release
        working-directory: FlutterApp

      - name: Rename APK with Version
        run: mv FlutterApp/build/app/outputs/flutter-apk/app-release.apk FlutterApp/build/app/outputs/flutter-apk/eco-cycle.v${{ github.run_number }}.apk

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: FlutterApp/build/app/outputs/flutter-apk/PulseMate.v${{ github.run_number }}.apk

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built APK
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: FlutterApp/build/app/outputs/flutter-apk/

      - name: Check for Changes
        id: check_changes
        run: echo "CHANGES=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v1.${{ github.run_number }}-${{ env.CHANGES }}"
          name: "Release v1.${{ github.run_number }}-${{ env.CHANGES }}"
          body: "New release of the app with latest changes."
          files: FlutterApp/build/app/outputs/flutter-apk/eco-cycle.v${{ github.run_number }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
